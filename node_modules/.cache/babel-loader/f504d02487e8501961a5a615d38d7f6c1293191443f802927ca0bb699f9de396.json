{"ast":null,"code":"var _jsxFileName = \"/Users/sara/Downloads/lab12/src/components/TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Task from \"./Task\";\nimport Form from \"./Form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskList() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  function addTask(task) {\n    const newTaskWithCreation = {\n      ...task,\n      createdAt: new Date().toISOString(),\n      completedAt: null\n    };\n    setTasks(prevTasks => [...prevTasks, newTaskWithCreation]);\n  }\n  function removeTask(taskToRemove) {\n    setTasks(tasks.filter(task => task.id !== taskToRemove.id));\n  }\n  function toggleCompleted(taskToToggle, isChecked) {\n    setTasks(tasks.map(task => {\n      if (task.id === taskToToggle.id) {\n        return {\n          ...task,\n          completed: isChecked,\n          completedAt: isChecked ? new Date().toISOString() : null\n        };\n      }\n      return task;\n    }));\n  }\n  function updateTaskTitle(taskId, newTitle) {\n    setTasks(tasks.map(task => task.id === taskId ? {\n      ...task,\n      title: newTitle\n    } : task));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n        task: task,\n        remove: removeTask,\n        toggleCompleted: (task, isChecked) => toggleCompleted(task, isChecked),\n        updateTaskTitle: updateTaskTitle\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskList, \"+34uIVDBalDkucWnJ7Aj1Xxb0MA=\");\n_c = TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","Task","Form","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","addTask","task","newTaskWithCreation","createdAt","Date","toISOString","completedAt","prevTasks","removeTask","taskToRemove","filter","id","toggleCompleted","taskToToggle","isChecked","map","completed","updateTaskTitle","taskId","newTitle","title","children","remove","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sara/Downloads/lab12/src/components/TaskList.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Task from \"./Task\";\nimport Form from \"./Form\";\n\nexport default function TaskList() {\n  const [tasks, setTasks] = useState([]);\n\n  function addTask(task) {\n    const newTaskWithCreation = {\n      ...task,\n      createdAt: new Date().toISOString(),\n      completedAt: null,\n    };\n    setTasks((prevTasks) => [...prevTasks, newTaskWithCreation]);\n  }\n\n  function removeTask(taskToRemove) {\n    setTasks(tasks.filter((task) => task.id !== taskToRemove.id));\n  }\n\n  function toggleCompleted(taskToToggle, isChecked) {\n    setTasks(\n      tasks.map((task) => {\n        if (task.id === taskToToggle.id) {\n          return {\n            ...task,\n            completed: isChecked,\n            completedAt: isChecked ? new Date().toISOString() : null,\n          };\n        }\n        return task;\n      }),\n    );\n  }\n\n  function updateTaskTitle(taskId, newTitle) {\n    setTasks(\n      tasks.map((task) =>\n        task.id === taskId ? { ...task, title: newTitle } : task,\n      ),\n    );\n  }\n\n  return (\n    <div>\n      <ul>\n        {tasks.map((task) => (\n          <Task\n            key={task.id}\n            task={task}\n            remove={removeTask}\n            toggleCompleted={(task, isChecked) =>\n              toggleCompleted(task, isChecked)\n            }\n            updateTaskTitle={updateTaskTitle}\n          />\n        ))}\n      </ul>\n      <Form addTask={addTask} />\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,SAASS,OAAOA,CAACC,IAAI,EAAE;IACrB,MAAMC,mBAAmB,GAAG;MAC1B,GAAGD,IAAI;MACPE,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACnCC,WAAW,EAAE;IACf,CAAC;IACDP,QAAQ,CAAEQ,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAEL,mBAAmB,CAAC,CAAC;EAC9D;EAEA,SAASM,UAAUA,CAACC,YAAY,EAAE;IAChCV,QAAQ,CAACD,KAAK,CAACY,MAAM,CAAET,IAAI,IAAKA,IAAI,CAACU,EAAE,KAAKF,YAAY,CAACE,EAAE,CAAC,CAAC;EAC/D;EAEA,SAASC,eAAeA,CAACC,YAAY,EAAEC,SAAS,EAAE;IAChDf,QAAQ,CACND,KAAK,CAACiB,GAAG,CAAEd,IAAI,IAAK;MAClB,IAAIA,IAAI,CAACU,EAAE,KAAKE,YAAY,CAACF,EAAE,EAAE;QAC/B,OAAO;UACL,GAAGV,IAAI;UACPe,SAAS,EAAEF,SAAS;UACpBR,WAAW,EAAEQ,SAAS,GAAG,IAAIV,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAG;QACtD,CAAC;MACH;MACA,OAAOJ,IAAI;IACb,CAAC,CACH,CAAC;EACH;EAEA,SAASgB,eAAeA,CAACC,MAAM,EAAEC,QAAQ,EAAE;IACzCpB,QAAQ,CACND,KAAK,CAACiB,GAAG,CAAEd,IAAI,IACbA,IAAI,CAACU,EAAE,KAAKO,MAAM,GAAG;MAAE,GAAGjB,IAAI;MAAEmB,KAAK,EAAED;IAAS,CAAC,GAAGlB,IACtD,CACF,CAAC;EACH;EAEA,oBACEN,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MAAA0B,QAAA,EACGvB,KAAK,CAACiB,GAAG,CAAEd,IAAI,iBACdN,OAAA,CAACH,IAAI;QAEHS,IAAI,EAAEA,IAAK;QACXqB,MAAM,EAAEd,UAAW;QACnBI,eAAe,EAAEA,CAACX,IAAI,EAAEa,SAAS,KAC/BF,eAAe,CAACX,IAAI,EAAEa,SAAS,CAChC;QACDG,eAAe,EAAEA;MAAgB,GAN5BhB,IAAI,CAACU,EAAE;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOb,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACL/B,OAAA,CAACF,IAAI;MAACO,OAAO,EAAEA;IAAQ;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAEV;AAAC7B,EAAA,CAzDuBD,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}